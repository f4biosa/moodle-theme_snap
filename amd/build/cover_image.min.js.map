{"version":3,"file":"cover_image.min.js","sources":["../src/cover_image.js"],"sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package\n * @copyright Copyright (c) 2015 Open LMS (https://www.openlms.net)\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/log', 'core/ajax', 'core/notification', 'theme_snap/ajax_notification', './cropper'],\n    function($, log, ajax, notification, ajaxNotify, Cropper) {\n\n        var cropper = null;\n        var originalImageURL = '';\n        var cropperRatio = 6/1;\n        if ($('#page-site-index').length) {\n            cropperRatio = 6/2;\n        }\n        // TODO - in Moodle 3.1 we should use the core template for this.\n        var addCoverImageAlert = function(id, msg, position = null) {\n            if (position === \"dialogue\") {\n                var alertPosition = '.snap_cover_image_description';\n            } else {\n                var alertPosition = '#snap-coverimagecontrol';\n            }\n            var closestr = M.util.get_string('closebuttontitle', 'moodle');\n            if (!$(id).length) {\n                $(alertPosition).before(\n                    '<div id=\"' + id + '\" class=\"snap-alert-cover-image alert alert-warning\" role=\"alert\">' +\n                    msg +\n                    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"' + closestr + '\">' +\n                    '<span aria-hidden=\"true\">&times;</span>' +\n                    '</button>' +\n                    '</div>'\n                );\n            }\n        };\n\n        /**\n         * Get human file size from bytes.\n         * http://stackoverflow.com/questions/10420352/converting-file-size-in-bytes-to-human-readable.\n         * @param {int} size\n         * @returns {string}\n         */\n        var humanFileSize = function(size) {\n            var i = Math.floor(Math.log(size) / Math.log(1024));\n            return (size / Math.pow(1024, i)).toFixed(2) * 1 + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n        };\n\n        /**\n         * First state - image selection button visible.\n         */\n        var state1 = function() {\n            $('#snap-changecoverimageconfirmation .ok').removeClass('ajaxing');\n            $('#snap-alert-cover-image-size').remove();\n            $('#snap-alert-cover-image-bytes').remove();\n            $('label[for=\"snap-coverfiles\"]').removeClass('ajaxing');\n            $('#snap-changecoverimageconfirmation').removeClass('state-visible');\n            $('label[for=\"snap-coverfiles\"]').addClass('state-visible');\n            $('#snap-coverfiles').val('');\n            $('body').removeClass('cover-image-change');\n        };\n\n        /**\n         * Second state - confirm / cancel buttons visible.\n         */\n        var state2 = function() {\n            $('#snap-alert-cover-image-upload-failed').remove();\n            $('#snap-changecoverimageconfirmation').removeClass('disabled');\n            $('label[for=\"snap-coverfiles\"]').removeClass('state-visible');\n            $('#snap-changecoverimageconfirmation').addClass('state-visible');\n            $('body').removeClass('cover-image-change');\n        };\n\n        /**\n         * Get original image url.\n         * @param {string} url\n         */\n        var getOriginalImageURL = function(url) {\n            var newURL = url;\n            newURL = newURL.replace(\"url(\", \"\");\n            newURL = newURL.replace(\")\", \"\");\n            newURL = newURL.replace(/['\"]+/g, \"\");\n            newURL = newURL.replace(\";\", \"\");\n            newURL = newURL.replace(\"croppedimage\", \"coverimage\");\n            newURL = newURL.replace(\"course-image-cropped\", \"course-image\");\n            newURL = newURL.replace(\"category-image-cropped\", \"category-image\");\n            newURL = newURL.replace(\"site-image-cropped\", \"site-image\");\n            return newURL;\n        };\n\n        /**\n         * Get cropped image url.\n         * @param {string} url\n         */\n        var getCroppedImageURL = function(url) {\n            var newURL = url;\n            newURL = newURL.replace(\"url(\", \"\");\n            newURL = newURL.replace(\")\", \"\");\n            newURL = newURL.replace(/['\"]+/g, \"\");\n            newURL = newURL.replace(\";\", \"\");\n            return newURL;\n        };\n\n        /**\n         * Load current image.\n         */\n        var loadCurrentImage = function() {\n            var currentImageUrl = $('#page-header').css(\"background-image\");\n            if (currentImageUrl === \"none\") {\n                $('.snap_cover_image_save_button').attr(\"disabled\", true);\n                return \"\";\n            }\n            $('.snap_cover_image_save_button').prop(\"disabled\", false);\n            currentImageUrl = getOriginalImageURL(currentImageUrl);\n            return currentImageUrl;\n        };\n\n        /**\n         * Moodle dialogue box.\n         * @param {string} courseShortName\n         * @param {int} categoryId\n         * @param {object} fpoptions\n         * @param {int} siteMaxBytes\n         */\n        var moodledialogue = function(courseShortName, categoryId, fpoptions, siteMaxBytes) {\n            var maxbytesstr = humanFileSize(siteMaxBytes);\n            let title = M.util.get_string('imageproperties', 'theme_snap');\n            let coverImageDesc = M.util.get_string('coverimagedesc', 'theme_snap', maxbytesstr);\n            let coverImageCropperDesc = M.util.get_string('coverimagecropperdesc', 'theme_snap', maxbytesstr);\n            let browseRepositories = M.util.get_string('browserepositories', 'theme_snap');\n            let selectImageString = M.util.get_string('selectimage', 'theme_snap');\n            let previewDisplay = \"'display:none'\";\n            let currentImageURL = loadCurrentImage();\n            originalImageURL = currentImageURL;\n            if (currentImageURL !== \"\") {\n                 previewDisplay = \"'display:block'\";\n            }\n\n            let content =\n                '<div class=\"mb-1 snap_cover_image_dialogue\">' +\n                    '<p class=\"snap_cover_image_description\">' + coverImageDesc + '</p>' +\n                    '<p class=\"snap_cover_image_cropper_description d-none\">' + coverImageCropperDesc + '</p>' +\n                    '<div class=\"input-group input-append w-100 snap_cover_image_browser_options\">' +\n                        '<button class=\"btn btn-secondary snap_cover_image_browser\" id=\"id_snap_cover_image_browser\">' +\n                        browseRepositories + '</button>' +\n                    '</div>' +\n                // Add the image preview.\n                '<div class=\"mdl-align\">' +\n                    '<div class=\"snap_cover_image_preview_box\">' +\n                        '<img id=\"id_snap_cover_image_preview\" class=\"snap_cover_image_preview\" alt=\"\" ' +\n                            'style=' + previewDisplay +\n                            'src=' + currentImageURL + '>' +\n                    '</div>' +\n                '</div>' +\n                // Add the save button.\n                '<div class=\"snap_cover_image_save\">' +\n                        '<button class=\"btn btn-secondary snap_cover_image_save_button\" id=\"id_snap_cover_image_save_button\" ' +\n                        'disabled>' +\n                         selectImageString + '</button>' +\n                    '</div>' +\n                '</div>';\n\n            var dialogue = new M.core.dialogue({\n                headerContent: title,\n                bodyContent: content,\n                width: '600px',\n                modal: true,\n                visible: false,\n                render: true,\n                additionalBaseClass: 'snap_cover_image_dialogue',\n            });\n            dialogue.show();\n\n            // Preview the original image in the modal.\n            if (currentImageURL !== \"\") {\n                $('.snap_cover_image_save_button').prop(\"disabled\", false);\n                if (cropper) {\n                    cropper.destroy();\n                }\n                // Initialize cover image cropper.\n                var imageToCrop = document.getElementById('id_snap_cover_image_preview');\n                cropper = new Cropper(imageToCrop, {\n                    viewMode: 3,\n                    aspectRatio: cropperRatio,\n                    dragMode: \"none\",\n                    zoomable: false,\n                    minCropBoxWidth: 300,\n                });\n                $('.snap_cover_image_cropper_description').removeClass('d-none');\n                $('#id_snap_cover_image_browser').click(function() {\n                    if (cropper) {\n                        cropper.destroy();\n                    }\n                });\n                $('#id_snap_cover_image_save_button').click(function() {\n                    if (cropper.getCroppedCanvas() !== null) {\n                        var croppedImage = cropper.getCroppedCanvas().toDataURL(\"image/png\");\n                        // Ensure that the page-header in courses has the mast-image class.\n                        $('.path-course-view #page-header').addClass('mast-image');\n                        $('.path-course-view #page-header .breadcrumb-item a').addClass('mast-breadcrumb');\n\n                        $('#page-header').css('background-image', 'url(' + croppedImage + ')');\n                        state2();\n                        saveImage({}, courseShortName, categoryId, cropper);\n                    }\n                });\n            }\n\n            $('body').addClass('cover-image-change');\n            $('label[for=\"snap-coverfiles\"]').addClass('ajaxing');\n\n            $('#id_snap_cover_image_browser').click(function(e) {\n                e.preventDefault();\n                showFilepicker('image', fpoptions, filepickerCallback(courseShortName, categoryId), dialogue);\n            });\n            $('#id_snap_cover_image_save_button').click(function() {\n                dialogue.hide();\n            });\n            $('.snap_cover_image_dialogue .closebutton, .moodle-dialogue-lightbox').click(function() {\n                state1();\n            });\n            dialogue.after(\"visibleChange\", function() {\n                if ($('#snap-changecoverimageconfirmation .ok').hasClass('ajaxing')) {\n                    state2();\n                }\n                if (!dialogue.get('visible')) {\n                    dialogue.destroy(true);\n                }\n            });\n        };\n\n        /**\n         * Load the image in the preview box after being uploaded using the file picker.\n         * @param {object} params\n         * @param {string} courseShortName\n         * @param {int} categoryId\n         */\n        var loadPreviewImage = function(params, courseShortName, categoryId) {\n\n            var image = new Image();\n            image.onerror = function() {\n                var preview = document.getElementById('id_snap_cover_image_preview');\n                preview.setAttribute('style', 'display:none');\n            };\n\n            image.onload = function() {\n                var input;\n                var imageWidth = this.width;\n                input = document.getElementById('id_snap_cover_image_preview');\n                input.setAttribute('src', params.url);\n                input.setAttribute('style', 'display:block');\n                $('.snap_cover_image_save_button').prop(\"disabled\", false);\n\n                // Warn if image resolution is too small.\n                if (imageWidth < 1024) {\n                    $('#snap-alert-cover-image-size').remove();\n                    addCoverImageAlert('snap-alert-cover-image-size',\n                        M.util.get_string('error:coverimageresolutionlow', 'theme_snap'),\n                        'dialogue'\n                    );\n                } else {\n                    $('#snap-alert-cover-image-size').remove();\n                }\n\n                if (cropper !== null) {\n                    cropper.replace(params.url);\n                } else {\n                    // Initialize cover image cropper.\n                    var imageToCrop = document.getElementById('id_snap_cover_image_preview');\n                    cropper = new Cropper(imageToCrop, {\n                        viewMode: 3,\n                        aspectRatio: cropperRatio,\n                        dragMode: \"none\",\n                        zoomable: false,\n                        minCropBoxWidth: 300,\n                    });\n                }\n                $('.snap_cover_image_cropper_description').removeClass('d-none');\n                $('#id_snap_cover_image_browser').click(function() {\n                    if (cropper) {\n                        cropper.destroy();\n                    }\n                });\n                $('#id_snap_cover_image_save_button').click(function() {\n                    var croppedImage = cropper.getCroppedCanvas().toDataURL(\"image/png\");\n                    // Ensure that the page-header in courses has the mast-image class.\n                    $('.path-course-view #page-header').addClass('mast-image');\n                    $('.path-course-view #page-header .breadcrumb-item a').addClass('mast-breadcrumb');\n\n                    $('#page-header').css('background-image', 'url(' + croppedImage + ')');\n\n                    state2();\n                    saveImage(params, courseShortName, categoryId, cropper);\n                });\n\n            };\n            image.src = params.url;\n        };\n\n\n        /**\n         * Callback for file picker.\n         * @param {string} courseShortName\n         * @param {int} categoryId\n         */\n        var filepickerCallback = function(courseShortName, categoryId) {\n            return function(params) {\n            if (params.url !== '') {\n                // Load the preview image.\n                loadPreviewImage(params, courseShortName, categoryId);\n                }\n            };\n        };\n\n        /**\n         * Create file picker.\n         * @param {string} type\n         * @param {object} fpoptions\n         * @param {Function} callback\n         * @param {object} dialogue\n         */\n        var showFilepicker = function(type, fpoptions, callback, dialogue) {\n            Y.use('core_filepicker', function(Y) {\n                var options = fpoptions;\n                options.formcallback = callback;\n                M.core_filepicker.show(Y, options);\n            });\n            $('.filepicker .closebutton').click(function() {\n                dialogue.destroy(true);\n                state1();\n            });\n        };\n\n        /**\n         * Save image after confirmation.\n         * @param {object} params\n         * @param {string} courseShortName\n         * @param {int} categoryId\n         * @param {object} cropper\n         */\n        var saveImage = function(params, courseShortName, categoryId, cropper) {\n\n            $('#snap-changecoverimageconfirmation .ok').click(function() {\n                var ajaxParams = {};\n\n                if (categoryId !== null) {\n                    ajaxParams.categoryid = categoryId;\n                } else if (courseShortName !== null) {\n                    ajaxParams.courseshortname = courseShortName;\n                } else {\n                    return;\n                }\n\n                if (params.id !== undefined) {\n                    ajaxParams.fileid = params.id;\n                } else if (params.file !== undefined) {\n                        var fileNameWithoutSpaces = params.file.replace(/ .*/, \"\");\n                        var regex = new RegExp(\"draft\\\\/(\\\\d+)\\\\/\" + fileNameWithoutSpaces, \"g\");\n                        var urlId = params.url.match(regex);\n                        ajaxParams.fileid = urlId[0].match(/\\d+/)[0];\n                }\n\n                if (params.file !== undefined) {\n                    ajaxParams.imagefilename = params.file;\n                }\n                if (params.url !== undefined) {\n                    ajaxParams.originalimageurl = params.url;\n                } else {\n                    ajaxParams.originalimageurl = originalImageURL;\n                }\n\n                cropper.getCroppedCanvas().toBlob((blob) => {\n                    var reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    reader.onloadend = function() {\n                        var imageBase64Data = reader.result;\n                        ajaxParams.croppedimagedata = imageBase64Data;\n                        ajax.call([\n                            {\n                                methodname: 'theme_snap_cover_image',\n                                args: {params: ajaxParams},\n                                done: function(response) {\n                                    state1();\n                                    if (response.contrast) {\n                                        addCoverImageAlert('snap-alert-cover-image-size',\n                                            response.contrast\n                                        );\n                                    }\n                                    if (!response.success && response.warning) {\n                                        addCoverImageAlert('snap-alert-cover-image-upload-failed', response.warning);\n                                    }\n                                    var newUrl = getCroppedImageURL(response.imageurl);\n                                    $('#page-header').css('background-image', 'url(' + newUrl + ')');\n                                    $('#page-header').data('servercoverfile', $('#page-header').css('background-image'));\n                                    $('#snap-changecoverimageconfirmation .ok').off(\"click\");\n\n                                },\n                                fail: function(response) {\n                                    state1();\n                                    ajaxNotify.ifErrorShowBestMsg(response);\n                                }\n                            }\n                        ], true, true);\n                    };\n                });\n\n            });\n\n            $('#snap-changecoverimageconfirmation .cancel').click(function() {\n\n                if ($(this).parent().hasClass('disabled')) {\n                    return;\n                }\n                $('#page-header').css('background-image', $('#page-header').data('servercoverfile'));\n                if ($('#page-header').data('servercoverfile') === \"none\") {\n                    $('.path-course-view #page-header').removeClass('mast-image');\n                    $('.path-course-view #page-header .breadcrumb-item a').removeClass('mast-breadcrumb');\n                }\n                state1();\n                params = {};\n            });\n        };\n\n        /**\n         *\n         * @param {object} ajaxParams\n         * @param {string} courseShortName\n         * @param {int} categoryId\n         * @param {int} siteMaxBytes\n         */\n        var coverImage = function(ajaxParams, courseShortName = null, categoryId = null, siteMaxBytes) {\n\n            if (courseShortName === null && categoryId === null) {\n                return;\n            }\n\n            ajax.call([\n                {\n                    methodname: 'theme_snap_file_manager_options',\n                    args: [],\n                    done: function(data) {\n                        var fpoptions = JSON.parse(data.fpoptions);\n                        // Take a backup of what the current background image url is (if any).\n                        $('#page-header').data('servercoverfile', $('#page-header').css('background-image'));\n                        $('#snap-coverimagecontrol').addClass('snap-js-enabled');\n                        $('#snap-coverfiles').click(function() {\n                            moodledialogue(courseShortName, categoryId, fpoptions, siteMaxBytes);\n                        });\n                    },\n                    fail: function() {\n                        return;\n                    }\n                }\n            ], true, true);\n        };\n\n        /**\n         * @param {int} categoryId\n         * @param {int} siteMaxBytes\n         */\n        var categoryCoverImage = function(categoryId, siteMaxBytes) {\n            var ajaxParams = {imagefilename: null, imagedata: null, categoryid: categoryId,\n                    courseshortname: null};\n            coverImage(ajaxParams, null, categoryId, siteMaxBytes);\n        };\n\n        /**\n         * @param {string} courseShortName\n         * @param {int} siteMaxBytes\n         */\n        var courseCoverImage = function(courseShortName, siteMaxBytes) {\n            var ajaxParams = {imagefilename: null, imagedata: null, categoryid: null,\n                    courseshortname: courseShortName};\n\n            coverImage(ajaxParams, courseShortName, null, siteMaxBytes);\n        };\n        return {courseImage: courseCoverImage, categoryImage: categoryCoverImage};\n    }\n);\n"],"names":["define","$","log","ajax","notification","ajaxNotify","Cropper","cropper","originalImageURL","cropperRatio","length","addCoverImageAlert","id","msg","position","alertPosition","closestr","M","util","get_string","before","state1","removeClass","remove","addClass","val","state2","moodledialogue","courseShortName","categoryId","fpoptions","siteMaxBytes","size","i","maxbytesstr","Math","floor","pow","toFixed","title","coverImageDesc","coverImageCropperDesc","browseRepositories","selectImageString","previewDisplay","currentImageURL","currentImageUrl","css","attr","prop","replace","content","dialogue","core","headerContent","bodyContent","width","modal","visible","render","additionalBaseClass","show","destroy","imageToCrop","document","getElementById","viewMode","aspectRatio","dragMode","zoomable","minCropBoxWidth","click","getCroppedCanvas","croppedImage","toDataURL","saveImage","e","preventDefault","showFilepicker","filepickerCallback","hide","after","hasClass","get","params","url","image","Image","onerror","setAttribute","onload","input","imageWidth","this","src","loadPreviewImage","type","callback","Y","use","options","formcallback","core_filepicker","ajaxParams","categoryid","courseshortname","undefined","fileid","file","fileNameWithoutSpaces","regex","RegExp","urlId","match","imagefilename","originalimageurl","toBlob","blob","reader","FileReader","readAsDataURL","onloadend","imageBase64Data","result","croppedimagedata","call","methodname","args","done","response","contrast","success","warning","newUrl","imageurl","data","off","fail","ifErrorShowBestMsg","parent","coverImage","JSON","parse","courseImage","imagedata","categoryImage"],"mappings":"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"}